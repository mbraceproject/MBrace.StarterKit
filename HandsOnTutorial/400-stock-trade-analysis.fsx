(*** hide ***)
#load "ThespianCluster.fsx"
//#load "AzureCluster.fsx"

open System
open System.IO
open MBrace.Core
open MBrace.Flow

// Record for a single data package from the trading API.
type MarketDataPackage = {    
    Symbol : string;
    Price : double;
    Volume: double;
    Asks: double array;
    Bids: double array
}

// A group of many data packages, this is the element that we are going to put into the queue.
// Group many packages together will reduce the number of Azure APIs (500 per second quota).
// Need to respect the 64KB queue message side from Azure.
type MarketDataGroup = {
    Items : CloudValue<MarketDataPackage array>
}

// Stock data sample used to generated simulated data.
let stockDataSample = "
sh000001,3100.76,156727536
sh600000,15.92,914258
sh600004,12.13,26515
sh600005,3.9,327130
sh600006,8.63,503616
sh600007,13.95,56808
sh600008,9.11,187414
sh600009,28.23,57004
sh600010,3.66,345198
sh600011,8.7,56836
sh600012,9.64,57963
sh600015,10.21,109129
sh600016,8.61,410780
sh600017,5.65,887780
sh600018,7.1,197293
sh600019,5.6,189269
sh600020,5.31,175621
sh600021,14.8,137920
sh600022,3.13,324902
sh600023,7.39,216826
sh600027,7.01,136405
sh600028,4.83,926836
sh600029,7.58,393721
sh600030,13.46,763693
sh600031,6.47,354745
sh600033,3.77,110530
sh600035,4.41,66188
sh600036,17.51,212577
sh600037,18.41,88803
sh600038,41.67,63676
sh600039,4.49,135448
sh600048,7.98,252742
sh600050,6.14,1465089
sh600051,8.88,29126
sh600052,5.69,106268
sh600054,19.74,41712
sh600055,27.66,40209
sh600056,14.4,94802
sh600057,10.49,45276
sh600059,9.14,194677
sh600060,13.71,87398
sh600061,14.11,88214
sh600062,20.27,25325
sh600063,4.91,196099
sh600064,16.19,60417
sh600066,18.73,98036
sh600067,7.22,381077
sh600068,7.18,183129
sh600069,3.97,56461
sh600070,9.01,267191
sh600071,16.23,16616
sh600074,16.95,4130
sh600075,10.49,7350
sh600076,8.4,135803
sh600077,5.35,89345
sh600078,6.19,110849
sh600079,14.89,140595
sh600080,8.52,109686
sh600081,17.7,124508
sh600082,5.33,114192
sh600083,11.73,81345
sh600084,5.52,64504
sh600085,23.04,71663
sh600086,31.41,72935
sh600088,19.47,50383
sh600089,10.88,148958
sh600091,7.89,38406
sh600093,12.51,67010
sh600094,8.51,286992
sh600095,10.67,453283
sh600096,10.44,83348
sh600098,9.64,175651
sh600100,14.88,588208
sh600101,12.14,54175
sh600103,5.32,235873
sh600104,16.57,109546
sh600105,14.48,101004
sh600107,14.37,94234
sh600108,6.96,589583
sh600109,12.15,306496
sh600111,12.99,162367
sh600112,13.04,336461
sh600113,8.89,124342
sh600114,12.52,42028
sh600115,7.35,482018
sh600116,13.06,44682
sh600117,4.69,113773
sh600118,35.91,253447
sh600119,16.14,220358
sh600120,18.87,65150
sh600121,5.09,171490
sh600122,9.93,207615
sh600123,7.24,176591
sh600125,8.3,167008
sh600126,7.01,158557
sh600127,6.07,184749
sh600128,12.22,134066
sh600129,16.62,65313
sh600130,6.24,274399
sh600131,7,44281
sh600132,13.35,33493
sh600133,10.41,381965
sh600135,11.06,73943
sh600136,31.23,23893
sh600137,19.45,53565
sh600138,20.85,238174
sh600143,7.14,140353
sh600145,5.09,44400
sh600148,26.25,217649
sh600149,17.02,432575
sh600150,35.95,154217
sh600152,7.75,69451
sh600156,9.92,85363
sh600157,4.24,349627
sh600158,17.97,382598
sh600159,4.34,82341
sh600160,12.81,281471
sh600161,25.6,59760
sh600162,6.01,64577
sh600163,5.3,42586
sh600166,5.85,260506
sh600168,9.95,68389
sh600169,5.13,245977
sh600170,8.15,127369
sh600171,13.44,146648
sh600172,14.73,61526
sh600173,5,46376
sh600175,4.66,132015
sh600176,22.07,126007
sh600177,12.36,112254
sh600178,8.67,61657
sh600179,10.24,98835
sh600180,22,29297
sh600182,14.44,30405
sh600183,7.55,123803
sh600184,21.37,76344
sh600185,15.87,73554
sh600187,5.16,286956
sh600188,8.87,34780
sh600190,5.15,205812
sh600191,15.71,424806
sh600192,7.6,62552
sh600196,22.66,62634
sh600197,10.24,67017
sh600198,19.1,203117
sh600199,8.01,37624
sh600200,16.57,118011
sh600201,48.9,16814
sh600202,13.73,1077
sh600203,9.61,45779
sh600206,11.84,175400
sh600208,5.17,203111
sh600209,6.64,86258
sh600210,6.14,1061630
sh600211,36.7,12640
sh600212,8.93,2332
sh600213,9.75,36976
sh600215,7.59,45550
sh600216,8.93,58380
sh600217,6.45,107549
sh600218,10.66,274117
sh600219,6.58,327024
sh600220,4.81,220266
sh600221,3.84,326826
sh600222,6.58,81146
sh600223,5.72,136841
sh600225,5.57,159357
sh600227,4.75,150675
sh600228,10.4,105434
sh600229,12.27,87332
sh600230,8.42,38546
sh600231,4.4,189035
sh600232,7.81,62463
sh600233,14.59,30598
sh600234,10.78,84408
sh600235,7.84,51469
sh600236,6.65,61057
sh600237,5.73,126765
sh600239,6.08,184285
sh600240,10.5,110481
sh600241,9.25,24543
sh600246,4.37,34715
sh600247,12.53,90376
sh600248,8.03,76716
sh600249,6.09,78015
sh600250,9.31,29042
sh600251,9.43,68800
sh600255,4.25,167485
sh600256,6.73,172981
sh600257,8.89,162549
sh600260,9.25,160164
sh600261,6.72,70399
sh600262,37.19,35300
sh600265,16.71,7405
sh600266,11.6,93100
sh600267,11.46,89306
sh600268,7.64,109300
sh600269,4.85,220174
sh600270,20.46,45013
sh600271,51.68,103943
sh600272,14.53,102892
sh600273,8.48,129848
sh600275,5.04,83121
sh600276,47.2,76918
sh600278,14.63,116712
sh600279,9.16,31649
sh600281,5.96,248680
sh600282,3.06,237131
sh600283,10.5,107718
sh600284,13.34,250929
sh600285,11.81,108841
sh600287,10.12,146153
sh600288,15.22,182765
sh600289,13.65,169228
sh600290,10.35,98622
sh600291,21.71,160354
sh600292,17.44,463023
sh600293,8.49,219246
sh600295,7.21,27206
sh600298,28.21,25354
sh600299,12.83,20027
sh600300,5.61,364679
sh600301,9.75,10892
sh600302,6.79,47337
sh600303,5.93,265097
sh600305,20.12,24382
sh600307,4.07,702752
sh600308,4.7,83165
sh600309,16.45,91457
sh600310,8.22,137599
sh600311,5.44,110007
sh600313,11.5,33210
sh600316,19.02,84472
sh600317,4.74,161977
sh600320,5.97,131930
sh600321,4.4,249163
sh600322,4.38,91602
sh600323,12.41,68754
sh600325,11.9,32312
sh600326,9.08,121705
sh600327,8.23,82480
sh600328,12.81,106274
sh600329,16.8,43534
sh600330,9.33,218555
sh600331,5.82,94979
sh600332,26.02,42767
sh600333,6.47,90949
sh600335,15.45,40621
sh600336,5.88,180267
sh600337,12.77,29187
sh600338,13.14,98889
sh600339,6.08,187419
sh600340,22.67,65051
sh600343,18.58,154266
sh600345,14.16,33831
sh600346,6.9,391962
sh600348,6.44,95623
sh600350,5.87,94693
sh600351,11.39,102407
sh600352,9.65,207784
sh600353,6.5,35298
sh600354,6.87,91629
sh600355,5.19,440883
sh600358,10.18,232701
sh600359,10.62,101233
sh600360,5.84,101825
sh600361,6.49,69745
sh600362,13.29,105733
sh600363,12.4,107322
sh600366,15.75,122676
sh600367,8.96,61184
sh600368,5.25,111650
sh600369,15.61,216223
sh600370,8.37,36318
sh600371,12.13,39361
sh600372,21.19,83768
sh600373,21.52,26980
sh600375,6.17,107240
sh600376,9.4,213456
sh600377,8.16,49384
sh600378,14.91,117649
sh600379,14.65,38934
sh600380,10.36,131286
sh600381,18.03,128001
sh600382,10.56,62946
sh600383,11.88,120505
sh600385,13.62,30094
sh600386,12.65,81240
sh600387,13.09,69610
sh600388,13.9,639354
sh600389,22.3,55290
sh600390,11.09,171852
sh600391,33.96,125416
sh600395,6.61,129526
sh600396,6.32,79493
sh600397,5.1,183606
sh600398,14.02,107298
sh600399,8.13,296733
sh600400,14.48,59087
sh600403,5.22,40331
sh600406,14.5,170549
sh600408,3.52,5583
sh600409,6.75,128063
sh600410,20.32,536702
sh600415,7.8,363860
sh600416,13.52,153118
sh600418,12.6,337554
sh600419,27.9,6510
sh600420,29.61,46374
sh600421,12.23,40331
sh600422,30.48,47386
sh600423,5.9,161972
sh600425,5.44,290120
sh600426,11.81,56668
sh600433,9.79,1510071
sh600435,28.04,115295
sh600436,48.81,14346
sh600438,10.65,37526
sh600439,5.35,139491
sh600444,17.37,12375
sh600449,9.43,187385
sh600452,19,15657
sh600455,44.74,6256
sh600456,14.12,27496
sh600458,15.58,80402
sh600459,16.32,95069
sh600460,5.74,60026
sh600461,10.69,67314
sh600463,11.43,40363
sh600467,6.06,106770
sh600468,12.61,21940
sh600469,13.08,25834
sh600470,6.23,75499
sh600475,14.11,40406
sh600476,24.84,48501
sh600477,9.69,144161
sh600479,14.32,65744
sh600480,13.23,82889
sh600481,8.53,142356
sh600483,13.7,52458
sh600485,18.15,405808
sh600487,9.14,181993
sh600488,5.75,119692
sh600489,8.89,382788
sh600491,9.4,164993
sh600493,10.93,93208
sh600495,9.56,431721
sh600496,5.05,97455
sh600497,8.7,101726
sh600498,21.54,79578
sh600500,10.61,162154
sh600501,15.93,73576
sh600502,12.23,212783
sh600503,9.47,1478721
sh600505,8.34,46414
sh600506,15.28,24023
sh600507,5.19,52262
sh600508,10.23,105498
sh600509,8.6,116683
sh600510,8.6,65413
sh600511,29.98,54258
sh600512,4.72,458652
sh600513,16.06,35008
sh600516,8.7,1131273
sh600517,10.43,275631
sh600518,13.88,195534
sh600519,191.38,12341
sh600520,13.95,26026
sh600521,23.07,34053
sh600523,16.05,51329
sh600526,14.44,883882
sh600527,6.12,1127993
sh600529,13.63,47507
sh600531,10.4,52641
sh600535,33.67,39847
sh600536,30.56,129547
sh600537,9.51,98811
sh600538,7.84,67015
sh600539,8.99,17393
sh600540,8.79,115154
sh600543,8.54,69244
sh600545,12.68,704358
sh600546,4.31,196578
sh600548,5.87,25497
sh600549,15.76,38208
sh600550,6.81,127046
sh600551,15.76,38364
sh600552,15.64,131079
sh600556,10.16,101053
sh600557,21.29,35046
sh600558,6.12,103452
sh600559,55.77,6612
sh600560,12.41,44139
sh600561,10.3,44002
sh600562,42.26,39956
sh600563,26.77,14275
sh600566,23.86,63366
sh600567,3.83,484380
sh600569,2.96,84107
sh600570,45.26,191751
sh600571,47.15,148375
sh600572,11.11,111914
sh600573,10.12,20991
sh600575,4.98,742670
sh600576,14.44,152014
sh600577,4.31,119198
sh600578,5.41,65523
sh600580,11.07,79145
sh600581,6.27,208489
sh600582,11.3,72317
sh600583,9.34,249207
sh600584,13.02,247466
sh600585,17.62,90337
sh600586,4.14,113737
sh600587,30.09,45895
sh600588,25.05,236998
sh600589,6.44,159195
sh600592,9.86,121657
sh600594,16.29,86526
sh600595,4.45,187879
sh600596,7.21,158072
sh600597,14.95,44706
sh600598,13.71,183518
sh600599,26.51,31525
sh600600,31.97,14515
sh600601,6.2,788486
sh600602,8.2,141072
sh600605,13.63,41365
sh600606,13.42,47228
sh600608,7.42,33786
sh600609,4.26,1054708
sh600611,12.91,729489
sh600612,47.48,4820
sh600613,22.05,138279
sh600614,7.59,188095
sh600615,15,20023
sh600616,9.96,82553
sh600617,15.85,15667
sh600618,11.65,39333
sh600619,8.53,42897
sh600621,13.56,154789
sh600622,11.6,72176
sh600623,13.81,19083
sh600624,11.6,377686
sh600628,16.62,213227
sh600629,20.43,16908
sh600630,19.69,389756
sh600635,7.76,853191
sh600636,13.27,130050
sh600637,32.16,94998
sh600638,12.47,92677
sh600639,21.9,137976
sh600640,19.79,298299
sh600642,7.38,114391
sh600644,6.88,35800
sh600647,19.63,30330
sh600648,25.31,131294
sh600649,13.05,279771
sh600650,33.28,525773
sh600651,10.41,86532
sh600653,5.06,347884
sh600655,16.14,393302
sh600657,5.69,35523
sh600658,8.97,27546
sh600660,11.78,44895
sh600661,27.37,102364
sh600662,14.42,588676
sh600663,47.42,98143
sh600664,10.4,78365
sh600665,4.88,55923
sh600667,5.36,210009
sh600668,11.41,71677
sh600673,5.31,124407
sh600674,10.43,154495
sh600675,7.46,360123
sh600676,13.02,271852
sh600677,16.2,121408
sh600678,11.06,92862
sh600679,14.01,49263
sh600680,28.87,203315
sh600681,11.15,33151
sh600683,7.65,72885
sh600684,8.14,99954
sh600685,32.93,35450
sh600686,16.25,45768
sh600687,13.01,300871
sh600688,6.69,398221
sh600689,9.62,113429
sh600690,9.37,199391
sh600692,12.48,156842
sh600693,7.42,24156
sh600694,34.11,15973
sh600695,6.69,86835
sh600697,23.24,11172
sh600698,6.07,95245
sh600699,23.39,66026
sh600701,13.51,191005
sh600702,13.22,74538
sh600703,20.23,90070
sh600704,15.27,328330
sh600705,15.44,510215
sh600706,14.33,27260
sh600708,13.4,321677
sh600711,6.23,243986
sh600712,6.95,259003
sh600713,8.01,100883
sh600714,8.4,58966
sh600715,22.5,28424
sh600716,6.29,60165
sh600717,9.88,193757
sh600718,14.43,191493
sh600720,6.64,54252
sh600722,4.25,46462
sh600723,8.44,116644
sh600724,6.56,167589
sh600725,5.84,225735
sh600726,7.12,215225
sh600727,7.18,89808
sh600728,22.47,186236
sh600730,21.99,143345
sh600731,7.39,42827
sh600733,28.25,18750
sh600734,5.81,81117
sh600737,14.44,641808
sh600738,7.11,65800
sh600740,5.54,104396
sh600741,13.86,53494
sh600742,21.5,41967
sh600743,5.96,358436
sh600744,8.06,412033
sh600746,8.22,30858
sh600747,4.24,208864
sh600748,10.48,56949
sh600749,16.12,92223
sh600750,46.24,45570
sh600751,7.28,209732
sh600753,17.68,27933
sh600755,7.29,127321
sh600756,20.31,152909
sh600757,8.08,200645
sh600758,9.27,30758
sh600760,15.28,343681
sh600761,10.45,31913
sh600764,13.59,50596
sh600765,15.17,127902
sh600766,12.05,29024
sh600768,14.06,29439
sh600769,8.31,46644
sh600770,9.75,313466
sh600771,24.29,11603
sh600773,12.99,149498
sh600774,17.1,21703
sh600775,12.62,112051
sh600776,8.13,135391
sh600779,8.17,22582
sh600780,6.84,25690
sh600782,4.92,195205
sh600783,22.87,120580
sh600784,7.63,144244
sh600787,10.49,306442
sh600789,9.89,182954
sh600790,6.39,109133
sh600791,6.44,60171
sh600792,6.18,552895
sh600794,5.84,75950
sh600795,4.12,572873
sh600796,9.1,341087
sh600797,11.3,377723
sh600798,6.7,26575
sh600800,7.61,295588
sh600801,7.26,73976
sh600802,6.6,98483
sh600803,11.53,34931
sh600804,21.4,176911
sh600805,10.72,90808
sh600807,10.17,350219
sh600808,3.23,249704
sh600809,15.2,32063
sh600810,7.04,70848
sh600811,7.39,148091
sh600812,6.17,80251
sh600814,8.88,42059
sh600815,7.48,140682
sh600816,15.09,81299
sh600818,52.66,13120
sh600819,6.2,59478
sh600820,11.89,1182175
sh600821,6.77,74656
sh600822,11.21,97166
sh600823,10.15,71982
sh600824,8.19,226625
sh600825,9.36,143613
sh600826,23.35,57908
sh600827,18.32,291475
sh600829,10.29,33955
sh600830,9.32,108196
sh600831,12.62,99959
sh600833,15.4,33918
sh600834,16.34,175384
sh600835,24.16,39008
sh600836,27.04,262324
sh600837,12.93,353571
sh600838,14.55,388390
sh600839,6.06,845165
sh600841,10.33,15054
sh600843,13.42,63413
sh600844,6.11,76226
sh600845,49.53,7890
sh600846,8.86,359468
sh600848,15.09,41448
sh600850,39.41,28944
sh600851,9.26,124781
sh600853,7.38,666804
sh600854,6.32,375985
sh600855,23.8,180324
sh600857,12.4,50691
sh600858,8.35,38671
sh600859,21.74,37592
sh600861,12.04,43027
sh600862,13.87,135688
sh600863,4.53,269538
sh600864,10.47,81954
sh600865,10.74,107841
sh600867,21.72,105890
sh600868,6.46,7105990
sh600869,15.98,213163
sh600870,5.49,186943
sh600871,9.9,663354
sh600872,14.74,328913
sh600873,7.2,417978
sh600874,9.35,538827
sh600875,12.74,279230
sh600876,31,425050
sh600877,7.61,183139
sh600879,15.1,359664
sh600881,6.46,319419
sh600883,10.92,44186
sh600884,24.48,198950
sh600885,27.61,8014
sh600886,8.95,2288164
sh600887,15.42,248513
sh600888,7.24,130825
sh600889,10.28,52036
sh600890,7.73,48484
sh600891,7.34,46426
sh600892,35.19,9910
sh600893,39.99,177715
sh600894,15.24,50320
sh600895,20.28,476246
sh600896,11.46,53856
sh600897,18.17,25406
sh600917,10.43,24171
sh600958,16.45,114355
sh600959,16.71,214079
sh600960,9.01,62402
sh600961,10.17,106934
sh600962,11.79,31823
sh600963,7.18,369078
sh600965,10.15,36891
sh600966,3.44,228380
sh600969,14.61,25322
sh600970,10.39,180389
sh600971,6.93,496781
sh600973,10.72,55470
sh600975,8.79,55947
sh600976,27.48,28750
sh600979,6.3,119095
sh600980,15.91,27001
sh600981,7.49,64626
sh600982,6.22,183968
sh600984,8.45,8480
sh600985,10.29,33936
sh600986,20.39,96103
sh600987,10.08,44008
sh600992,10.8,32794
sh600993,18.13,63480
sh600997,6.09,280206
sh600998,16.61,45931
sh600999,16.04,99056
sh601000,7.69,222019
sh601001,5.6,152655
sh601002,11.02,466338
sh601005,3.12,240670
sh601006,9.07,224950
sh601007,11.16,81737
sh601008,6.23,295596
sh601009,14.62,121578
sh601010,6.61,116188
sh601011,5.59,90600
sh601012,9.47,207060
sh601015,9.69,38218
sh601016,15.34,332585
sh601021,110.48,9009
sh601028,7.6,109922
sh601038,10.01,181770
sh601058,6.3,87303
sh601069,15.67,221583
sh601088,14.84,93106
sh601098,21.58,57201
sh601099,6.71,254166
sh601101,6.56,67220
sh601106,8.87,722919
sh601107,4.44,56848
sh601111,7.64,208652
sh601113,5.64,35616
sh601116,8.23,18674
sh601117,6.39,112214
sh601118,6.82,373636
sh601126,26.32,18631
sh601137,15.23,15859
sh601139,8.31,80149
sh601158,8.34,44911
sh601166,14.35,405924
sh601168,6.39,143364
sh601169,8.6,269899
sh601177,8,68532
sh601179,6.18,120630
sh601186,13.81,274706
sh601188,4.36,58760
sh601198,15.5,177871
sh601199,30.45,10152
sh601208,7.27,34757
sh601211,18.76,319677
sh601216,9.63,217688
sh601218,5.51,165425
sh601222,28.06,17319
sh601225,4.53,101915
sh601226,10.63,27870
sh601231,11.72,43320
sh601233,10.17,86524
sh601238,18.33,40881
sh601258,3.74,279665
sh601288,3.08,928485
sh601311,16.66,176609
sh601313,12.06,25377
sh601318,30.9,271792
sh601328,6.17,513143
sh601333,4.34,224413
sh601336,37.8,55652
sh601339,5.84,41258
sh601368,15.55,89534
sh601369,7.12,47877
sh601377,7.93,178773
sh601390,11.26,532947
sh601398,4.38,937731
sh601515,12.51,32277
sh601518,4.27,78353
sh601519,9.99,413076
sh601555,11.02,207773
sh601558,3.65,172584
sh601566,14.73,33207
sh601567,11.04,57675
sh601579,11.01,126650
sh601588,4.36,108209
sh601600,4.85,447706
sh601601,22.68,67680
sh601607,17.67,85797
sh601608,6.51,623881
sh601616,5.18,102276
sh601628,26.14,67104
sh601633,29.89,161138
sh601636,4.69,1105144
sh601666,4.6,135158
sh601668,5.97,742383
sh601669,7.65,409454
sh601677,10.31,22655
sh601678,6.53,66166
sh601688,14.06,169031
sh601689,16.74,34036
sh601699,6.16,98529
sh601700,6.71,50641
sh601717,6.44,112490
sh601718,12.57,1472466
sh601727,11.51,297055
sh601766,13.23,1091075
sh601777,9.77,149884
sh601788,15.69,132355
sh601789,9.48,197978
sh601798,11.07,40021
sh601799,21.89,15516
sh601800,12.29,105142
sh601801,25.19,29424
sh601808,16.25,46219
sh601818,4.01,1043522
sh601857,8.43,490294
sh601872,6.71,385044
sh601880,5.36,457447
sh601886,8.73,94570
sh601888,55.35,35739
sh601890,12.35,883951
sh601898,6.21,180632
sh601899,3.47,865608
sh601901,6.44,264571
sh601908,6.52,107064
sh601918,9.7,734546
sh601928,12.59,97111
sh601929,11.06,284651
sh601933,10.22,272510
sh601939,5.25,269977
sh601958,7.04,68067
sh601965,8.56,147298
sh601968,12.7,160623
sh601969,12.74,26023
sh601985,9.22,1160937
sh601988,3.8,895372
sh601989,10.14,1881129
sh601991,5.52,76983
sh601992,7.97,56088
sh601996,7.25,116550
sh601998,5.96,340904
sh601999,8.4,45648
sh603000,17.12,108856
sh603001,25.72,32112
sh603002,8.47,45821
sh603003,17.1,32740
sh603005,33.88,8059
sh603006,27.92,5660
sh603008,13.41,58143
sh603009,25.38,6741
sh603010,30.8,7762
sh603011,18.86,46164
sh603012,17.76,26562
sh603015,22.35,35118
sh603017,37.08,36161
sh603018,55.4,6380
sh603019,60.32,34209
sh603020,39.85,12307
sh603021,33.58,28582
sh603022,33,15108
sh603023,25.14,18025
sh603025,39.72,102559
sh603026,19.28,41408
sh603030,23.16,16128
sh603066,33.43,36053
sh603077,4.84,224925
sh603085,36.61,82486
sh603088,38.43,31189
sh603099,20.28,70040
sh603100,13.65,38383
sh603108,70.56,14523
sh603111,25.91,99425
sh603116,26.3,38817
sh603117,26.65,172344
sh603118,32.15,31048
sh603123,8.85,14421
sh603126,11.94,102995
sh603166,21.66,50697
sh603167,9.45,55780
sh603168,39.37,10332
sh603169,16.23,59817
sh603188,17.97,23538
sh603198,33.4,54029
sh603199,42.2,22477
sh603222,22.9,30078
sh603223,33.97,56295
sh603268,39.2,28507
sh603288,31.51,11028
sh603306,28.9,10751
sh603308,18.18,78824
sh603309,37.7,61497
sh603311,22.8,82689
sh603315,30.87,15262
sh603318,28.93,26257
sh603328,20.52,21025
sh603333,6.72,46756
sh603338,32.45,19081
sh603355,32.17,19315
sh603366,8.79,21681
sh603368,66.58,2960
sh603369,26.19,10167
sh603399,8.27,35332
sh603456,47.71,9601
sh603518,26.37,11623
sh603519,36.49,29471
sh603555,25.41,55515
sh603558,14.55,20955
sh603566,36.68,11111
sh603567,37.77,28442
sh603568,51.92,26173
sh603588,58,8343
sh603589,31.96,38106
sh603598,36.33,37850
sh603599,29.94,16217
sh603600,64.95,82252
sh603601,22.06,17709
sh603606,15.88,132039
sh603609,9.64,21128
sh603611,24.85,63737
sh603616,38.98,104396
sh603618,20.22,16418
sh603636,41.87,20559
sh603669,26.22,25705
sh603678,70.74,1493
sh603688,15.28,18297
sh603698,26.35,26198
sh603699,17.95,19564
sh603703,38.56,11980
sh603718,37.42,17450
sh603729,67.3,6305
sh603766,15.73,113600
sh603789,29.98,47970
sh603799,13.81,40683
sh603806,31.32,24298
sh603808,34.43,10595
sh603818,13.71,141966
sh603828,26.45,8892
sh603838,31.1,64344
sh603869,22.34,56984
sh603885,50.58,35348
sh603889,21.45,14086
sh603898,23,165282
sh603899,32,12493
sh603901,42.99,27279
sh603918,36.71,12722
sh603939,64.09,14777
sh603968,22.48,34294
sh603969,13.62,28115
sh603979,24.64,65415
sh603988,33.54,9802
sh603989,36.74,21898
sh603993,10.84,201391
sh603997,15.73,20498
sh603998,31.98,12458
sz399001,10115.55,164021024
sz399002,11822.77,163761248
sz399003,6035.63,259779
sz399004,4212.3,28120528
sz399005,6850.12,63872700
sz399006,2122.26,37858680
sz399007,4072.76,55956416
sz399008,1406.78,34884884
sz399009,4985.21,27835888
sz399010,7437.67,65940180
sz399011,5013.05,121896600
sz399012,3165.82,29715706
sz399013,4482.42,61244796
sz399015,2406.49,44937224
sz399100,7651.82,161246992
sz399101,10073.1,63872700
sz399102,2390.56,37858680
sz399103,5632.59,58739424
sz399106,1737.92,164021024
sz399107,1817.66,163761248
sz399108,1041.84,259779
sz399231,1176.77,2070654
sz399232,2035.84,2725270
sz399233,1768.91,105946336
sz399234,1130.2,3322411
sz399235,1769.16,4139294
sz399236,1924.45,5983895
sz399237,1413.9,1673636
sz399238,1908.5,475545
sz399239,2476.08,15963273
sz399240,982.29,2466799
sz399241,2311.75,8225322
sz399242,2981.09,1344237
sz399243,1843.31,975507
sz399244,1499.43,2191796
sz399248,2155.47,2184885
sz399249,811.27,1396524
sz399298,143.57,6892
sz399299,155.59,52960
sz399300,3242.75,74219472
sz399301,145.39,53916
sz399302,148.26,53384
sz399303,7357.24,116933624
sz399305,6598.89,430507
sz399306,985.58,2759597
sz399307,202.21,2321
sz399310,4045.26,23158520
sz399311,3705.78,188247264
sz399312,3667.67,81321296
sz399313,3418.21,37606848
sz399314,3282.76,59396856
sz399315,4578.34,58306712
sz399316,5209.01,70543696
sz399317,4277.22,316792000
sz399318,4405.51,597946
sz399319,1830.87,17035886
sz399320,2814.96,28448540
sz399321,4108.28,17813450
sz399322,5002,18765098
sz399324,4953.09,9851186
sz399326,4637.68,5177462
sz399328,5055.7,7905420
sz399330,3500.86,28120528
sz399332,6206.02,12230859
sz399333,7419.56,13331075
sz399335,4042.02,11026976
sz399337,4270.37,18865816
sz399339,5004.74,18535274
sz399341,1050.39,16831340
sz399344,4642.51,55956416
sz399346,3599.1,18884804
sz399348,4097.18,20594618
sz399350,1637.7,4077761
sz399351,4628.33,7743333
sz399352,5186.41,22451940
sz399353,3398.75,8883019
sz399355,3367.32,9933594
"

// Parse stockDataSample into better format.
type StockInfo = {
    Symbol: string;
    Price: double;
    Volume: double;
}

let ParseLine (line : string) =
    let parts = line.Split ',' |> Array.toList
    match parts with
    | [symbol; price; volume] -> { Symbol = symbol; Price= float price; Volume = float volume; }
    | _ -> {Symbol = ""; Price=1.2; Volume=2.4; }


let stockInfo = 
    stockDataSample.Split '\n' 
    |> Array.filter(fun line -> line.Length > 0) 
    |> Array.map(fun line -> ParseLine line)


// Generate simulated market data at a one timestamp.
let SimulateMarketSlice stockInfo =
    let r = Random()
    seq {
        for s in stockInfo do
            let symbol = s.Symbol
            let newPrice = s.Price *  (1.0 + r.NextDouble()/5.0 - 0.1)
            let newVolume = s.Volume
            let asks = [| float (r.Next(500, 1500)) |]
            let bids = [| float (r.Next(500, 1500)) |]
            yield { Symbol=symbol; Price=newPrice; Volume=newVolume; Asks=asks; Bids=bids; } } 
    |> Seq.toArray


let cluster = Config.GetCluster() 

// The queue which stores stock trading data.
// Let's assume that there is another program which enqueues trading data into this queue.
let trading_data_queue = CloudQueue.New<MarketDataGroup>() |> cluster.Run


// Generate simulated market data, for the moment, generate 10 slices.
// Wait 3 seconds between two slices.
let SimulateMarket =
    cloud {                
        //while true do
        for i in 1..10 do
            let md = SimulateMarketSlice stockInfo
            let! mdc = CloudValue.New md
            let mdp = { Items = mdc; } 
            let! r = CloudQueue.Enqueue(trading_data_queue, mdp)
            do! Cloud.Sleep 3000
        return! trading_data_queue.Count
    }


// The queue which stores analysis results.
let analysis_result_queue = CloudQueue.New<MarketDataGroup>() |> cluster.Run

//let item = CloudQueue.Dequeue(trading_data_queue) |> cluster.Run
//let itemCount = cloud { return! trading_data_queue.Count } |> cluster.Run


let LargeBidVolume = 1000.0
let LargeAskVolume = 1000.0

// Does a market data have large ask or bid?
let HasLargeAskOrBid(md : MarketDataPackage) = 
    let largeAsk = md.Asks |> Array.filter(fun v -> v > LargeBidVolume) |> Seq.length
    let largeBid = md.Bids|> Array.filter(fun v -> v > LargeAskVolume) |> Seq.length
    largeAsk + largeBid > 0


let AnalyzeMarketData = 
    cloud {
        // This version of the program runs the th
        let sleep_time = ref 1000
        while true do
            let! data_group = CloudQueue.Dequeue(trading_data_queue)
            let data_groups = [| data_group |]
            if data_groups.Length > 0 then
                sleep_time := 1000
                // The task is simple now, just get the market data which has large asks or bids.
                let task = 
                    data_groups
                    |> CloudFlow.OfArray
                    |> CloudFlow.collect(fun p -> p.Items.Value)
                    |> CloudFlow.filter(fun md ->  HasLargeAskOrBid(md))
                    |> CloudFlow.toArray

                let result = task |> cluster.Run
                let! cValue = CloudValue.New result
                let analysis_result = { Items = cValue }
                
                do! CloudQueue.Enqueue(analysis_result_queue, analysis_result)
            else
                do! Cloud.Sleep(!sleep_time)
                sleep_time := !sleep_time * 2
                if !sleep_time > 10000 then
                    sleep_time := 10000            
    }

let analysisTask = AnalyzeMarketData |> cluster.CreateTask

